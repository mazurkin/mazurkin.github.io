#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail
set -o monitor
set -o noglob

# get a free Google Gemini API Key and set the ${GOOGLE_AI_KEY} environment variable
# - https://aistudio.google.com/app/apikey

# examples:
# - https://github.com/google/generative-ai-docs/blob/main/site/en/gemini-api/docs/get-started/rest.ipynb

# documentation
# - https://ai.google.dev/gemini-api/docs/models/gemini
# - https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models
# - https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions

REQ_FILE_PATH="${1}"
declare -r REQ_FILE_PATH

REQ_FILE_MIME="${2}"
declare -r REQ_FILE_MIME

REQ_QUESTION="${3}"
declare -r REQ_QUESTION

GOOGLE_AI_MODEL="${GOOGLE_AI_MODEL:-gemini-2.0-flash}"
declare -r GOOGLE_AI_MODEL

GOOGLE_AI_REQUEST=$(mktemp)
declare -r GOOGLE_AI_REQUEST

cat > ${GOOGLE_AI_REQUEST} <<EOF
{
  "contents": [
    {
      "parts": [
        {
            "text": "You are an experienced HR professional evaluating candidates to the software engineering position. ${REQ_QUESTION}"
        },
        {
          "inline_data": {
            "mime_type": "${REQ_FILE_MIME}",
            "data": "$(base64 -w0 ${REQ_FILE_PATH})"
          }
        }
      ]
    }
  ],
  "generationConfig": {
    "temperature": 0.0
  }
}
EOF

echo "-----------------------------------------------------------------------------------------------------------------"
echo "QUESTION: ${REQ_QUESTION}"
echo "-----------------------------------------------------------------------------------------------------------------"
echo ""

curl "https://generativelanguage.googleapis.com/v1beta/models/${GOOGLE_AI_MODEL}:generateContent?key=${GOOGLE_AI_KEY}" \
        --silent \
        --max-time 300 \
        --header "Content-Type: application/json" \
        --request POST \
        --data-binary "@${GOOGLE_AI_REQUEST}" \
    | jq --raw-output ".candidates[0].content.parts[0].text" \
    | awk '{gsub(/\\n/,"\n")}1'

rm "${GOOGLE_AI_REQUEST}"
