{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Nick Mazurkin \u8212- Software Engineer, Team Lead, Staff Engineer\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b New York City, USA}, greencard, {\field{\*\fldinst{HYPERLINK "tel:+13477203170"}}{\fldrslt{\ul
+13477203170
}}}
, {\field{\*\fldinst{HYPERLINK "mailto:career@mazurk.in"}}{\fldrslt{\ul
career@mazurk.in
}}}
, {\field{\*\fldinst{HYPERLINK "https://www.linkedin.com/in/mazurkin/"}}{\fldrslt{\ul
LinkedIn
}}}
, {\field{\*\fldinst{HYPERLINK "https://github.com/mazurkin/"}}{\fldrslt{\ul
GitHub
}}}
, {\field{\*\fldinst{HYPERLINK "https://mazurk.in/#resume"}}{\fldrslt{\ul
Resume
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b Java}, {\b Python}, {\b Web}, {\b DB}, {\b No-SQL}, {\b Linux}, {\b ML}, {\b AI}, {\b Cloud}, {\b K8S}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 PulsePoint, New York, USA\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\field{\*\fldinst{HYPERLINK "https://www.pulsepoint.com/"}}{\fldrslt{\ul
PulsePoint.com
}}}
, AdTech, OpenRTB Exchange, DSP, DMP\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Software Engineer with Expertise in Java, Python, and ML (Feb 2017 \u8212- present)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Experienced software engineer with a proven track record of developing and deploying high-performance applications using Java, Python, ML, Linux, and web technologies. Expertise in building and scaling distributed systems, implementing machine learning models, and optimizing performance for large-scale data processing.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed an asynchronous web crawler/fetcher for /ads.txt and /app-ads.txt web resources, providing and enhancing transparency and trust for the SSP and DSP partners of our Exchange platform (processing ~500K domains daily, Java, Spring, Netty).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a supply prediction system for RTB traffic, enabling clients to switch to a cheaper self-serving platform (processing 24M documents daily using Lucene, Spring Framework and ML/CatBoost).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented a scoring model to effectively throttle proxy processing of incoming supply, selecting only 20% of the most profitable RTB requests and blocking 80% of the least profitable supply. This resulted in a 50% reduction in the number of required servers.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Designed and implemented a DMP platform using asynchronous Java, gRPC, Cassandra, and Redis. This platform provides the effective solutions for targeting and optimization algorithms, accessing 30 billion entities with a p99 latency of 5ms and a p50 latency of 1ms.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a standalone service for domain attribution, enabling efficient domain and application bundle targeting (achieving 100k/sec QPS using gRPC and REST).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a client-side balancing library using the JSQ algorithm and circuit-breakers, significantly reducing client-server communication latency from p95=6ms to p95=1ms.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Containerized and deployed a cluster of DoubleVerify service instances, achieving 300k/sec QPS in peak. Implemented custom client-side balancing and a low-latency custom client-to-cluster connection HTTP/REST library, enabling faster and easier deployments with efficient access.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a dockerized test infrastructure for custom configuration of Redis and Cassandra, similar to TestContainers, which facilitated the execution of integration tests.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a hierarchy of docker images for ~20 projects written in Python, Java, and Jupyter, significantly reducing the time required to create new projects.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed an audience builder for 15 audiences, enabling our client to target very specific audiences with focus either on volume or accuracy (using Luigi, Hive, and ETL).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully resolved 2-3 support issues daily as part of a periodical 3rd-line technical on-call support rotation.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented several dozen RTB changes in the application stack, including improvements, new features, deployments, fixes, and monitoring (using Java, Netty, and Linux).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed an engine for internal reports with embedded alerting, enabling transparent and quick monitoring of important pipelines and services (using Python, Hive, Impala, and Jupyter). Created 6 internal engineering reports.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented 7 ETL pipelines in Python using Luigi, Docker, Hive, and Presto.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented 3 production classifiers (using machine learning, Java, JPMML, Python, Scikit-learn, and Jupyter) to provide solutions for video-completion rate targeting and look-alike audience targeting.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a model to predict the quality of NPI attribution, enabling clients to select the confidence level for HCP targeting.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a model to predict the quality of ICD10 attribution based on obfuscated and aggregated clean-room prescription data, enabling clients to select DTC audiences based on condition probability.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Developed a secure facade to access and process obfuscated clean-room data, providing a secure and efficient interface to private data (Python, Flask, Gunicorn, Google Cloud API).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented and delivered the gender prediction model (Python, Sklearn)\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Team Lead, Data Science and Engineering team (Apr 2020 \u8212- present)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Led a team of 6 data scientists and 3 Java/Python engineers (DSE) working across 5 time zones, responsible for planning, performance tracking, coordination, and agile management. Proven ability to lead and mentor teams, manage projects, and deliver results on time and within budget.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully delivered 3 new internal services and 5 new ML models as a team leader.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully completed 20 quarterly plans with the team in research, development, and deployment.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully migrated DSE projects to the new data center.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Provided interviewing, on-boarding, and mentoring for new team members.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully coordinated and communicated with other teams and team leaders on numerous projects.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully maintained an iterative Agile framework, including scrum, retrospectives, and prioritization of tasks.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Deutsche Bank\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\field{\*\fldinst{HYPERLINK "https://careers.db.com/explore-the-bank/careers-in-technology/"}}{\fldrslt{\ul
Deutsche Bank Technology Center
}}}
, Moscow, RU\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Senior Software Java Engineer, AVP (Jun 2016 \u8212- Feb 2017)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented several new algorithms, code and concurrency improvements to the dbCAP project achieving the required performance of the solution (exchange events messaging on Solace System message broker, KDB+, java).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully implemented the test suite for the legacy projects allowing to extend the life-time and reliability of the legacy projects (process control, runtime log analyzers, TeamCity, environment settings).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Improved the internal messaging framework based on Solace Systems message broker (achieved up to 160000 messages/sec stored reliably to the disk), introduced solutions for the performance metering.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Designed and implemented the multithreaded and garbage-less algorithms and structures (Java) for message acknowledgement in complex environments to provide effective processing without long GC pauses.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented a modern front-end build toolchain for the legacy project, added the required UI features for the project (Angular 2, NPM, RxJs, TypeScript, TSLint, System.js, Rollup, jQuery, Bootstrap).\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 OK.ru\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\field{\*\fldinst{HYPERLINK "https://ok.ru"}}{\fldrslt{\ul
OK.ru
}}}
, Moscow, RU, the one of the largest social networks (54 MAU)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Senior Software Java Developer (Oct 2012 \u8212- May 2016)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implemented a multiple features in the searching infrastructure of the OK.ru service: backend services, data storages, relevancy customization, indexation, replication (Apache Lucene, Spring Framework, Web Services, SQL/noSQL, Linux)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Fixed multiple legacy issues in L12N infrastructure for the OK.ru service including the resources editor, Java frameworks and workflow process, achieved resource propagation to ~2000 servers.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Make significant contribution to the moderation and antispam services, architecture and implementation, implemented NSFW detector, spam detector (based on naive bayes detector), UGC filter cluster (near real-time voting-quorum service).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Successfully designed, implemented and run the MVP for the startup project (Tinder-alike) in very short time (3 months), created the architecture of the service including SOA, custom search service, asynchronous binary client protocol, push service (GCM), photo uploading/processing/distribution service, statistics and analytics (apache netty, apache cassandra, kafka, queues, messaging, mobile apps, python, machine learning).\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Education\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Mari State Technical University (1994 \u8212- 1999)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Yoshkar-Ola, Russia, \u8220"Computing machines, complexes, systems, and networks\u8221", Engineer (with honors, equivalent to a master\u8217's degree)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Open Source projects\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 net-crusher (2016)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 TCP/UDP proxy library for automated and manual connectivity testing (used by RabbitMQ, Aerospike, Terracotta), more: {\field{\*\fldinst{HYPERLINK "https://netcrusherorg.github.io/netcrusher-java/"}}{\fldrslt{\ul
project
}}}
, {\field{\*\fldinst{HYPERLINK "https://github.com/NetCrusherOrg/netcrusher-java"}}{\fldrslt{\ul
sources
}}}
, {\field{\*\fldinst{HYPERLINK "https://mvnrepository.com/artifact/com.github.netcrusherorg/netcrusher-core/usages"}}{\fldrslt{\ul
usages
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Resume\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The latest and the most detailed resume can be downloaded in different document formats at {\field{\*\fldinst{HYPERLINK "https://mazurk.in/#resume"}}{\fldrslt{\ul
https://mazurk.in
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \par}
}
